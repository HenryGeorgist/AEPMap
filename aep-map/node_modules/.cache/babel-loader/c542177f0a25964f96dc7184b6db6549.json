{"ast":null,"code":"import v4 from \"uuid\";\nimport Static from 'ol/source/ImageStatic';\nimport ImageLayer from 'ol/layer/Image';\nimport Projection from 'ol/proj/Projection';\nimport exampleTiff from '../../resources/Depth (Max).Terrain.stpaul_10ft.tif';\nconst AEP_INITALIZE_START = 'AEP_INITALIZE_START';\nconst AEP_INITALIZE_END = 'AEP_INITALIZE_END';\nconst MAP_INITIALIZED = 'MAP_INITIALIZED';\n\nconst getBundle = function () {\n  return {\n    name: 'aep',\n    getReducer: () => {\n      const initialData = {\n        _shouldInitialize: false\n      };\n      return (state = initialData, {\n        type,\n        payload\n      }) => {\n        switch (type) {\n          case AEP_INITALIZE_START:\n          case AEP_INITALIZE_END:\n            return Object.assign({}, state, payload);\n\n          case MAP_INITIALIZED:\n            return Object.assign({}, state, {\n              _shouldInitialize: true\n            });\n\n          default:\n            return state;\n        }\n      };\n    },\n    doAepInitialize: () => ({\n      dispatch,\n      store,\n      anonGet\n    }) => {\n      dispatch({\n        type: AEP_INITALIZE_START,\n        payload: {\n          _shouldInitialize: false\n        }\n      });\n      initMap(store);\n    },\n    reactAepShouldInitialize: state => {\n      if (state.aep._shouldInitialize) return {\n        actionCreator: \"doAepInitialize\"\n      };\n    }\n  };\n};\n\nexport { getBundle as default };\n\nconst initMap = function (store) {\n  const map = store.selectMap();\n  console.log(map);\n  var extent = [745484.7500000000000000, 8008067.9699999997392297, 763614.7500000000000000, 8018797.9699999997392297];\n  var projection = new Projection({\n    code: '4269',\n    units: 'ft',\n    extent: extent\n  });\n  const lyr = new ImageLayer({\n    source: new Static({\n      url: exampleTiff,\n      projection: projection,\n      imageExtent: extent\n    })\n  });\n  const parentUid = store.selectTreeViewRootId();\n  const uid = v4();\n  store.doAddLayer({\n    uid: uid,\n    displayName: 'AEP Grid',\n    parentUid: parentUid,\n    mapLayer: lyr,\n    serviceType: \"LocalGeoTif\",\n    visible: true,\n    zoomTo: false\n  });\n};","map":{"version":3,"sources":["C:/Examples/aepmap/aep-map/src/cm3-plugins/aep/cm3-aep-bundle.js"],"names":["v4","Static","ImageLayer","Projection","exampleTiff","AEP_INITALIZE_START","AEP_INITALIZE_END","MAP_INITIALIZED","getBundle","name","getReducer","initialData","_shouldInitialize","state","type","payload","Object","assign","doAepInitialize","dispatch","store","anonGet","initMap","reactAepShouldInitialize","aep","actionCreator","default","map","selectMap","console","log","extent","projection","code","units","lyr","source","url","imageExtent","parentUid","selectTreeViewRootId","uid","doAddLayer","displayName","mapLayer","serviceType","visible","zoomTo"],"mappings":"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","sourcesContent":["import v4 from \"uuid\";\r\nimport Static from 'ol/source/ImageStatic';\r\nimport ImageLayer from 'ol/layer/Image';\r\nimport Projection from 'ol/proj/Projection';\r\nimport exampleTiff from '../../resources/Depth (Max).Terrain.stpaul_10ft.tif'\r\nconst AEP_INITALIZE_START='AEP_INITALIZE_START';\r\nconst AEP_INITALIZE_END='AEP_INITALIZE_END';\r\nconst MAP_INITIALIZED='MAP_INITIALIZED';\r\n\r\nconst getBundle=function(){\r\n  return({\r\n    name:'aep',\r\n    getReducer: () => {\r\n      const initialData = {\r\n        _shouldInitialize: false,\r\n      };\r\n      return (state = initialData, { type, payload }) => {\r\n        switch(type){\r\n          case AEP_INITALIZE_START:\r\n          case AEP_INITALIZE_END:\r\n            return Object.assign({}, state, payload);\r\n          case MAP_INITIALIZED:\r\n            return Object.assign({}, state, {\r\n              _shouldInitialize: true\r\n            })\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    },\r\n    doAepInitialize: () => ({ dispatch, store, anonGet }) => {\r\n      dispatch({\r\n        type: AEP_INITALIZE_START,\r\n        payload: {\r\n          _shouldInitialize: false,\r\n        }\r\n      })\r\n      initMap(store);      \r\n    },\r\n    reactAepShouldInitialize: (state) => {\r\n      if(state.aep._shouldInitialize) return { actionCreator: \"doAepInitialize\" };\r\n    }\r\n  })\r\n}\r\n\r\nexport {getBundle as default}\r\n\r\n\r\nconst initMap=function(store){\r\n  const map = store.selectMap();\r\n  console.log(map)\r\n  var extent = [745484.7500000000000000,8008067.9699999997392297, 763614.7500000000000000,8018797.9699999997392297];\r\n  var projection = new Projection({\r\n    code: '4269',\r\n    units: 'ft',\r\n    extent: extent,\r\n  });\r\n  const lyr = new ImageLayer({\r\n    source: new Static({\r\n    url: exampleTiff,\r\n    projection: projection,\r\n    imageExtent: extent,\r\n    }),\r\n  }) \r\n\r\n  const parentUid = store.selectTreeViewRootId();\r\n  const uid = v4();\r\n  store.doAddLayer({\r\n    uid: uid,\r\n    displayName: 'AEP Grid',\r\n    parentUid: parentUid,\r\n    mapLayer: lyr,\r\n    serviceType: \"LocalGeoTif\",\r\n    visible: true,\r\n    zoomTo: false,\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}