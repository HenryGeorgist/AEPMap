{"ast":null,"code":"import v4 from \"uuid\";\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nconst AEP_INITALIZE_START = 'AEP_INITALIZE_START';\nconst AEP_INITALIZE_END = 'AEP_INITALIZE_END';\nconst UPDATE_AEP_TOKEN = 'UPDATE_AEP_TOKEN';\nconst MAP_INITIALIZED = 'MAP_INITIALIZED';\nconst apiHost = process.env.REACT_APP_APIHOST_AEP;\n\nconst getBundle = function (config) {\n  console.log(config);\n  return {\n    name: 'aep',\n    getReducer: () => {\n      const initialData = {\n        _shouldInitialize: false\n      };\n      return (state = initialData, {\n        type,\n        payload\n      }) => {\n        switch (type) {\n          case AEP_INITALIZE_START:\n          case AEP_INITALIZE_END:\n          case UPDATE_AEP_TOKEN:\n            return Object.assign({}, state, payload);\n\n          case MAP_INITIALIZED:\n            return Object.assign({}, state, {\n              _shouldInitialize: true\n            });\n\n          default:\n            return state;\n        }\n      };\n    },\n    doSetAEPToken: token => ({\n      dispatch,\n      store\n    }) => {\n      dispatch({\n        \"type\": UPDATE_AEP_TOKEN,\n        payload: {\n          \"token\": token\n        }\n      });\n\n      if (token.authToken && token.authToken !== \"\") {\n        initMap(store, token.authToken);\n      }\n    },\n    doAepInitialize: () => ({\n      dispatch,\n      store,\n      anonGet\n    }) => {\n      config.registerAEPHook(store);\n      dispatch({\n        type: AEP_INITALIZE_START,\n        payload: {\n          _shouldInitialize: false\n        }\n      });\n    },\n    reactAepShouldInitialize: state => {\n      if (state.aep._shouldInitialize) return {\n        actionCreator: \"doAepInitialize\"\n      };\n    }\n  };\n};\n\nexport { getBundle as default };\nconst Pluvial_layers = [{\n  name: \"DC\",\n  url: \"gwc/service/tms/1.0.0/ml%3Adc_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Harrison\",\n  url: \"gwc/service/tms/1.0.0/ml%3Aharrison_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Brentwood\",\n  url: \"gwc/service/tms/1.0.0/ml%3Abrentwood_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Highland Park\",\n  url: \"gwc/service/tms/1.0.0/ml%3Ahighlandpark_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Cedar Rapids\",\n  url: \"gwc/service/tms/1.0.0/ml%3Acedarrapids_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Renton\",\n  url: \"gwc/service/tms/1.0.0/ml%3Arenton_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Sacramento\",\n  url: \"gwc/service/tms/1.0.0/ml%3Asacramento_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Skagit City\",\n  url: \"gwc/service/tms/1.0.0/ml%3Askagitcity_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Stockton\",\n  url: \"gwc/service/tms/1.0.0/ml%3Astockton_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Meridian Hills\",\n  url: \"gwc/service/tms/1.0.0/ml%3Ameridianhiils_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Passic\",\n  url: \"gwc/service/tms/1.0.0/ml%3Apassaic_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Yuba City\",\n  url: \"gwc/service/tms/1.0.0/ml%3Ayuba_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Merced\",\n  url: \"gwc/service/tms/1.0.0/ml%3Amerced_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Des Plains\",\n  url: \"gwc/service/tms/1.0.0/ml%3Adesplains_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}];\nconst Fluvial_layers = [{\n  name: \"DC\",\n  url: \"gwc/service/tms/1.0.0/ml%3Adc_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Cedar Rapids\",\n  url: \"gwc/service/tms/1.0.0/ml%3Acedarrapids_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Renton\",\n  url: \"gwc/service/tms/1.0.0/ml%3Arenton_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Sacramento\",\n  url: \"gwc/service/tms/1.0.0/ml%3Asacramento_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Skagit City\",\n  url: \"gwc/service/tms/1.0.0/ml%3Askagitcity_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Stockton\",\n  url: \"gwc/service/tms/1.0.0/ml%3Astockton_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Meridian Hills\",\n  url: \"gwc/service/tms/1.0.0/ml%3Ameridianhiils_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Passic\",\n  url: \"gwc/service/tms/1.0.0/ml%3Apassaic_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Yuba City\",\n  url: \"gwc/service/tms/1.0.0/ml%3Ayuba_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Merced\",\n  url: \"gwc/service/tms/1.0.0/ml%3Amerced_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}, {\n  name: \"Des Plains\",\n  url: \"gwc/service/tms/1.0.0/ml%3Adesplains_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\n}];\n\nconst initMap = function (store, token) {\n  const parentUid = store.selectTreeViewRootId();\n  const p_id = v4();\n  store.doAddLayer({\n    uid: p_id,\n    displayName: \"Pluvial AEP Grids\",\n    parentUid: parentUid,\n    mapLayer: null,\n    serviceType: \"not a folder\",\n    visible: true,\n    zoomTo: false\n  });\n  const f_id = v4();\n  store.doAddLayer({\n    uid: f_id,\n    displayName: \"Fluvial AEP Grids\",\n    parentUid: parentUid,\n    mapLayer: null,\n    serviceType: \"not a folder\",\n    visible: true,\n    zoomTo: false\n  });\n  Pluvial_layers.forEach(layer => {\n    let wms = new TileLayer({\n      source: new XYZ({\n        url: apiHost + layer.url\n      })\n    });\n    const uid = v4();\n    store.doAddLayer({\n      uid: uid,\n      displayName: layer.name,\n      parentUid: p_id,\n      mapLayer: wms,\n      serviceType: \"TMS\",\n      visible: false,\n      zoomTo: false\n    });\n  });\n  Fluvial_layers.forEach(layer => {\n    let wms = new TileLayer({\n      source: new XYZ({\n        url: apiHost + layer.url\n      })\n    });\n    const uid = v4();\n    store.doAddLayer({\n      uid: uid,\n      displayName: layer.name,\n      parentUid: f_id,\n      mapLayer: wms,\n      serviceType: \"TMS\",\n      visible: true,\n      zoomTo: false\n    });\n  });\n};","map":{"version":3,"sources":["C:/Examples/aepmap/aep-map/src/cm3-plugins/aep/cm3-aep-bundle.js"],"names":["v4","TileLayer","XYZ","AEP_INITALIZE_START","AEP_INITALIZE_END","UPDATE_AEP_TOKEN","MAP_INITIALIZED","apiHost","process","env","REACT_APP_APIHOST_AEP","getBundle","config","console","log","name","getReducer","initialData","_shouldInitialize","state","type","payload","Object","assign","doSetAEPToken","token","dispatch","store","authToken","initMap","doAepInitialize","anonGet","registerAEPHook","reactAepShouldInitialize","aep","actionCreator","default","Pluvial_layers","url","Fluvial_layers","parentUid","selectTreeViewRootId","p_id","doAddLayer","uid","displayName","mapLayer","serviceType","visible","zoomTo","f_id","forEach","layer","wms","source"],"mappings":"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","sourcesContent":["import v4 from \"uuid\";\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\n\r\nconst AEP_INITALIZE_START='AEP_INITALIZE_START';\r\nconst AEP_INITALIZE_END='AEP_INITALIZE_END';\r\nconst UPDATE_AEP_TOKEN='UPDATE_AEP_TOKEN';\r\nconst MAP_INITIALIZED='MAP_INITIALIZED';\r\nconst apiHost=process.env.REACT_APP_APIHOST_AEP\r\n\r\nconst getBundle=function(config){\r\n  console.log(config)\r\n  return({\r\n    name:'aep',\r\n    getReducer: () => {\r\n      const initialData = {\r\n        _shouldInitialize: false,\r\n      };\r\n      return (state = initialData, { type, payload }) => {\r\n        switch(type){\r\n          case AEP_INITALIZE_START:\r\n          case AEP_INITALIZE_END:\r\n          case UPDATE_AEP_TOKEN:\r\n            return Object.assign({}, state, payload);\r\n          case MAP_INITIALIZED:\r\n            return Object.assign({}, state, {\r\n              _shouldInitialize: true\r\n            })\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    },\r\n    doSetAEPToken:(token)=>({dispatch, store})=>{\r\n      dispatch({\"type\":UPDATE_AEP_TOKEN,payload:{\"token\":token}});\r\n      if(token.authToken && token.authToken!==\"\"){\r\n        initMap(store,token.authToken)\r\n      }\r\n    },\r\n    doAepInitialize: () => ({ dispatch, store, anonGet }) => {\r\n      config.registerAEPHook(store)\r\n      dispatch({\r\n        type: AEP_INITALIZE_START,\r\n        payload: {\r\n          _shouldInitialize: false,\r\n        }\r\n      })   \r\n    },\r\n    reactAepShouldInitialize: (state) => {\r\n      if(state.aep._shouldInitialize) return { actionCreator: \"doAepInitialize\" };\r\n    }\r\n  })\r\n}\r\n\r\nexport {getBundle as default}\r\n\r\nconst Pluvial_layers = [\r\n  {\r\n    name:\"DC\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Adc_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Harrison\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Aharrison_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Brentwood\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Abrentwood_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Highland Park\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Ahighlandpark_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Cedar Rapids\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Acedarrapids_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Renton\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Arenton_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Sacramento\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Asacramento_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Skagit City\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Askagitcity_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Stockton\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Astockton_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Meridian Hills\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Ameridianhiils_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Passic\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Apassaic_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Yuba City\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Ayuba_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Merced\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Amerced_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  },\r\n  {\r\n    name:\"Des Plains\",\r\n    url:\"gwc/service/tms/1.0.0/ml%3Adesplains_p@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n  }\r\n]\r\n  const Fluvial_layers = [\r\n    {\r\n      name:\"DC\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Adc_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Cedar Rapids\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Acedarrapids_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Renton\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Arenton_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Sacramento\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Asacramento_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Skagit City\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Askagitcity_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Stockton\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Astockton_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Meridian Hills\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Ameridianhiils_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Passic\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Apassaic_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Yuba City\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Ayuba_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Merced\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Amerced_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    },\r\n    {\r\n      name:\"Des Plains\",\r\n      url:\"gwc/service/tms/1.0.0/ml%3Adesplains_f@EPSG%3A900913@png/{z}/{x}/{-y}.png\"\r\n    }\r\n]\r\n\r\nconst initMap=function(store,token){\r\n    const parentUid = store.selectTreeViewRootId();\r\n    const p_id = v4();\r\n    store.doAddLayer({\r\n      uid: p_id,\r\n      displayName: \"Pluvial AEP Grids\",\r\n      parentUid: parentUid,\r\n      mapLayer: null,\r\n      serviceType: \"not a folder\",\r\n      visible: true,\r\n      zoomTo: false,\r\n    });\r\n    const f_id = v4();\r\n    store.doAddLayer({\r\n      uid: f_id,\r\n      displayName: \"Fluvial AEP Grids\",\r\n      parentUid: parentUid,\r\n      mapLayer: null,\r\n      serviceType: \"not a folder\",\r\n      visible: true,\r\n      zoomTo: false,\r\n    });\r\n    Pluvial_layers.forEach((layer)=>{\r\n      let wms = new TileLayer({\r\n        source: new XYZ({\r\n          url: apiHost + layer.url,\r\n        }),\r\n      })\r\n      \r\n      const uid = v4();\r\n      store.doAddLayer({\r\n        uid: uid,\r\n        displayName: layer.name,\r\n        parentUid: p_id,\r\n        mapLayer: wms,\r\n        serviceType: \"TMS\",\r\n        visible: false,\r\n        zoomTo: false,\r\n      });      \r\n    });\r\n    Fluvial_layers.forEach((layer)=>{\r\n      let wms = new TileLayer({\r\n        source: new XYZ({\r\n          url: apiHost + layer.url,\r\n        }),\r\n      })\r\n      \r\n      const uid = v4();\r\n      store.doAddLayer({\r\n        uid: uid,\r\n        displayName: layer.name,\r\n        parentUid: f_id,\r\n        mapLayer: wms,\r\n        serviceType: \"TMS\",\r\n        visible: true,\r\n        zoomTo: false,\r\n      });      \r\n    });\r\n\r\n}"]},"metadata":{},"sourceType":"module"}